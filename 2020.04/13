2020.04.13 星期一
继续看论文2020，Ad Hoc Networks
Authentication protocol in CTNs for a CWD-WPT charging system in a cloud environment
Luis F.A. Roman ∗, PauloR.L. Gondim
1、贡献点如下
1)一种认证和授权协议，能够保护隐私和完整性以及密钥协议和发布
2)基于雾计算与云计算融合的新型CWD-WPT动态充电架构设计
3)保存EVs的匿名性，因为协议是基于线下购买的下载票，系统盲目签名
4)使用密码原语，例如短签名和基于双线性对的盲签名，用于身份验证，而不会对EV的真实身份造成危害
5)电动汽车与CWD-WPT充电站所有实体之间的相互认证
6)AVISPA工具对协议的正式安全验证
7)一种安全性分析，考虑到几个可能影响系统的攻击，与其他建议相比，其中已经考虑了更多的攻击
8)与其他协议的性能比较，包括通信和计算成本
2、在预备知识中有双线性配对，数字签名：短签名，盲签名；以及哈希链。
感觉算是第一次看到短签名，盲签名，哈希链放在预备知识中介绍的。这样可以对基础知识有一个更准确的理解吧。
比如哈希链：选择一个种子，生成整个秘钥串。生成的秘钥必须与生成的顺序相反。这是因为这样攻击者无法从使用的秘钥中计算出有效的秘钥。
3、方案总共有四个阶段：系统的初始化，车辆的注册，车辆购买票，车辆使用购买的票进行充电请求。
系统初始化：CCS（公司充电服务）执行，生成系统公私钥与自己的公私钥。
车辆的注册：车辆向CCS进行注册，根据车辆的身份得到来自CCS的证书。
车辆购买票：车辆在CCS有银行账户，有足够的资金购买充电票。首先车辆先将身份，证书，与买票的张数n发送给CCS请求票。CCS收到并且验证有效后，发送一些信息给车辆，车辆根据收到的信息，以及选择的n个匿名身份,生成盲签名，发送给CCS，之后CCS再次针对车辆的盲签名进行签名，车辆得到这些信息可以计算令牌（票）。
车辆使用后买的票进行充电请求（秘钥协商）：首先是车辆与雾服务器进行密钥协商得到车辆雾会话秘钥，之后在雾服务器的帮助下协商出车辆与RSU之间的会话秘钥。之后车辆使用车辆RSU会话秘钥发送哈希链请求信息，当RSU收到后给出让车辆可以计算哈希链的元素。哈希链生成的值就是一个秘钥（对应到RSU管理的一个充电板），充电板可以对秘钥进行检查，是否该秘钥已经被使用不止一次，这样避免多次使用。
4、还有方案中的细节没有明白，计划下一步着重看细节，与安全性能分析。
