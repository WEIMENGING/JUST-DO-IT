2020.07.15 星期三
看论文2016年TDSC上的PBA: Prediction-based Authentication for Vehicle-to-Vehicle Communications
Chen Lyu, Dawu Gu, Yunze Zeng, Prasant Mohapatra
该论文PBA（基于预测的认证）方案主要是基于Elliptic Curve Digital Signature Algorithm (ECDSA)（椭圆曲线数字签名算法）签名与基于TESLA方案。

TESLA是一个轻量级的基于对称的方案，它利用了单向哈希链去实现源认证，自然可以容忍任意包丢失。然而，一个缺点是接收方必须在能对数据包进行身份验证之前缓冲一次披露延迟。此外,不提供不可抵赖性，因为接收者无法说服第三方，该信息来自声称的发件人。

安全目标：
及时认证；
不可抵赖性；
抵抗包丢失：当数据包在传输过程中丢失了，它应该对接收者的验证后续的数据包没有什么影响；
抵抗DOS攻击：如果身份验证方案带来了巨大的存储开销，可能会引起攻击者的注意发起基于内存的DoS攻击，通过广播无效的恶意消息来获取接收器的存储资源这会导致崩溃。身份验证机制应具有低计算性和内存成本这样的其他应用程序可以在车联网内正常工作。

攻击模型：攻击者修改、拦截传输的消息，不让接收者认证。
本文考虑的DOS攻击，是由一个或多个引起的串通攻击者广播无效签名或一些合法的车辆无线电范围内发送有效的消息签名引起的。认为包损失是由低劣的通信质量造成的(如车辆的高机动性)。
当攻击者泛滥时，不考虑泛滥攻击：大量的信标阻断了通讯，因为接收器可以快速识别它们。


主要有六个阶段
1）链秘钥生成，每辆车为接下来发送的n个信标生成n个链秘钥，使用一个秘钥用于签名；
2）位置预测：每辆车预测在下一个信标广播时的自己的位置；
3）默克尔哈希树MHT的构造：基于位置的预测，车辆构造公私钥；Rooti是在此刻到下个期间所有可能移动的预测结果。
4）签名生成：对于第一个信标，车辆对哈希链的承诺以及MHT的预测结果使用ECDSA进行签名，并且广播。对于其他信标，车辆使用TESLA 秘钥对消息进行签名。
5）自生成MAC存储：减少未经验证的签名的存储成本，接收方只记录了一个缩短的MAC。
6）签名验证：对于第一个信标，接收者会验证ECDSA签名。
对于验证接下来的信标签名，接收者将获得相应的TESCA key,重构MHT预测结果，如果预测结果匹配的MAC在内存中找到就及时认证信标，否则，用之后的TESCA key认证。

目前进度，在看具体方案！
