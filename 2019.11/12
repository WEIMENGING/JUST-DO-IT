2019.11.12 星期二
TIFS的，LPPA: Lightweight Privacy-Preserving Authentication From Efficient Multi-Key Secure Outsourced Computation for Location-Based Services in VANETs。
我梳理了一下过程。
主要分为四个阶段：初始化、基于位置服务消息的生成、过滤以及基于位置服务消息的解密与验证。
初始化阶段：为RSU，CSP（服务提供商）以及U用户生成公私钥对。生成系统公私钥。生成公开参数。 
基于位置服务消息的生成： 
说明：一个位置信息包括用户，消息号，位置坐标，消息被收集的时间，还有用户对该消息的等级（从1到5）（用户不接受该消息，或者用户将该消息作为冗余消息时，等级被设置为0）。
每个车辆的用户和RSU生成各自的公私钥（根据前文说的算法），用户也生成公私钥基于属性的私钥。
1）用户生成加密的基于位置服务的消息
对消息内容加密，里面有允许被访问的策略，并对密文进行了签名（使用的私钥），此外还有使用公钥以及公私钥对位置坐标以及生成消息的时间进行加密。
签名使用的私钥与后面加密使用的私钥不是一样的，因为使用的是不同的算法（签名算法与加密算法）。然后将该元组在附近进行广播。
2）每个车辆的用户初始化并更新一个表存储加密的上面的一个元组，此外还有多加了一个对等级加密后的密文。然后，对于存储在表中的每一个元组，用户随机的选取六个随机数（盲化因子）对元组进行重加密，目的是去实现对车辆用户的兴趣模式进行保护。这里使用的是单向活板门排列函数，使用了RSU与CSP的公钥，目的是让RSU与CSP可以使用私钥计算出盲化因子。
基于位置消息的过滤：RSU为每个车辆用户猜测加密部分的等级，该用户在之前是没有评级的。（这部分比较复杂，公式并没有看懂）
1）对于来到的每一个消息，与用户的表中的每一个元组，RSU与CSP计算一个函数，再使用算法用到了RSU与CSP的私钥求得了盲化因子，再对阈值进行加密（阈值是表示一个消息是否是冗余的），然后对比上述求得的两个函数。
2）RSU计算相似度，对相似度进行加密，并与猜测级综合起来进行得出猜测等级并将所有加密后的发给车辆用户。
基于位置服务的解密与验证：当收到一个消息后，车辆首先恢复猜测等级，对比与之前设置的阈值，选择拒绝该消息，接收该消息，或者接收并转发该消息。当认为无用就拒绝，当认为有用就进行验证签名，如果签名不通过就停止，否则接收该消息并进行解密。
这里的去冗余的意思是RSU帮助计算是否对该用户有用的概率，根据相似度，（这个代价还是很大的，因为需要计算该用户库中的元组与每一个消息，其中用到求和，不过最后说到支持聚合签名与多签名技术可以聚合到一个签名）。用户解密消息之前先对这个等级进行解密，当满足要求再进行解密。
计划再看看不懂的地方，公式复杂的部分，与前面的预备知识也是有关系的，看的时候再联系一下。
