2019.12.19 星期四
1、接着前天的看，确实张静师姐17年的带有过滤器的论文与13年的TVT很像，算是就是基于该方案直接在验证的时候修改成了无配对的操作，在初始化的握手阶段，假名身份生成阶段完全一样，签名的时候有点变化，因为在批批验证的时候不使用双线性配对操作！群密钥生成过程也是一样的。
2、使用过滤器并使用二分查找技术。
二分查找技术只是在批验证后面给出了语言描述，不同的是与别人方案中使用的过滤器不一样，看到是Bloom与Cuckoo的区别。Cuckoo 过滤器有着更好的表现性能，比如签名是不新鲜的，可以及时进行删除，可以保证消息的新鲜性。有着低的空间成本。有着更高的查找表现。也进行了实验分析，只是不知道这个数据是怎么得到的，看到在引用的论文中有，查看了一下，
Fan, B., Andersen, D. G., Kaminsky, M., & Mitzenmacher, M. D. (2014, December). Cuckoo filter: Practically better than bloom. In Proceedings of the 10th ACM International on Conference on emerging Networking Experiments and Technologies (pp. 75-88). ACM.
发现其中使用的原理都是一样的，只是应用在车联网环境下而已，并且在实验中所说的优点在14年的关于滤波器的介绍中讲的点也都是一样的。实验图的比较点也是一样的。
我之前觉得别人的论文高大上的原因，贡献点很足是没有看到别人引用别人的内容有多少。
3、在安全性分析中，本篇论文与11年的以及13年（这两篇也就是我前两天看的那两篇）进行相比可以实现防重播攻击，因为在消息中添加了时间戳。性能分析相比固然好因为没有使用双线性配对。而通信成本是降低了，原因是虽然加入了时间戳，但是关于车辆的匿名身份其中一项与签名由点变为了数。从这里学到了如何从通信方面也进行改进，这是我在写论文的时候没有注意到的点，没有仔细考虑是点还是数的问题。
4、最后总结来看17年TVT这篇创新点其实就是把别人使用配对的验证修改为无配对的验证！
